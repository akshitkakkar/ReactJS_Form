[{"D:\\Project\\ReactJS_Form\\react-form\\src\\index.js":"1","D:\\Project\\ReactJS_Form\\react-form\\src\\App.js":"2","D:\\Project\\ReactJS_Form\\react-form\\src\\reportWebVitals.js":"3","D:\\Project\\ReactJS_Form\\react-form\\src\\components\\Form.js":"4","D:\\Project\\ReactJS_Form\\react-form\\src\\reducers\\index.js":"5","D:\\Project\\ReactJS_Form\\react-form\\src\\actions\\index.js":"6","D:\\Project\\ReactJS_Form\\react-form\\src\\actions\\types.js":"7","D:\\Project\\ReactJS_Form\\react-form\\src\\reducers\\userLoginReducer.js":"8","D:\\Project\\ReactJS_Form\\react-form\\src\\helpers\\formFields.js":"9","D:\\Project\\ReactJS_Form\\react-form\\src\\components\\FormField.js":"10"},{"size":796,"mtime":1610886331169,"results":"11","hashOfConfig":"12"},{"size":166,"mtime":1610873963622,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610870466753,"results":"14","hashOfConfig":"12"},{"size":2022,"mtime":1610900357611,"results":"15","hashOfConfig":"12"},{"size":231,"mtime":1610899855478,"results":"16","hashOfConfig":"12"},{"size":327,"mtime":1610900402515,"results":"17","hashOfConfig":"12"},{"size":76,"mtime":1610902497241,"results":"18","hashOfConfig":"12"},{"size":321,"mtime":1610900457166,"results":"19","hashOfConfig":"12"},{"size":167,"mtime":1610900244518,"results":"20","hashOfConfig":"12"},{"size":457,"mtime":1610900308903,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11x9s9k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"D:\\Project\\ReactJS_Form\\react-form\\src\\index.js",[],["48","49"],"D:\\Project\\ReactJS_Form\\react-form\\src\\App.js",[],"D:\\Project\\ReactJS_Form\\react-form\\src\\reportWebVitals.js",[],"D:\\Project\\ReactJS_Form\\react-form\\src\\components\\Form.js",["50","51","52"],"import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions'\r\nimport {reduxForm, Field} from 'redux-form'\r\nimport _ from 'lodash'\r\nimport formFields from '../helpers/formFields'\r\nimport FormField from './FormField'\r\n\r\n/*\r\n    * Pulling userLogin action creator from redux connect and handleSubmit from redux form\r\n*/\r\nconst Form = ({userLogin, handleSubmit}) => {\r\n\r\n    const renderFields = () => {\r\n\r\n        return _.map(formFields, ({label, name}) => {\r\n            return (\r\n                <Field key={name} type=\"text\" component={FormField} label={label} name={name}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"form-login\">\r\n            <form onSubmit={handleSubmit(values => userLogin(values))}>\r\n                <h3>Sign In</h3>\r\n                {renderFields()}\r\n                <div className=\"form-checkbox\">\r\n                    <input id=\"remember-login\" type=\"checkbox\" tabIndex=\"0\"/>\r\n                    <label htmlFor=\"remember-login\">Remember Me?</label>\r\n                </div>\r\n                <button className=\"form-submit\" type=\"submit\">Sign In</button>\r\n                <div className=\"form-help\">\r\n                    <a href=\"#\">Forgot your password?</a>\r\n                    <p>Don't have an account? <a href=\"#\">Sign up</a></p>\r\n                    <a href=\"#\">Resend Email Confirmation</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n    * Validate function runs onBlur of input fields and right before handleSubmit\r\n    * Checks for error in fields and blocks submission\r\n*/\r\nconst validate = (values) => {\r\n    const errors = {};\r\n\r\n    _.each(formFields, ({name}) => {\r\n        if(!values[name]) {\r\n            errors[name] = \"This field is mandatory\"\r\n        }\r\n    })\r\n\r\n    return errors;\r\n}\r\n\r\n/*\r\n    * Connecting to Redux Store and Redux Form\r\n*/\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'loginForm',\r\n    destroyOnUnmount: true\r\n})(connect(null, actions)(Form))","D:\\Project\\ReactJS_Form\\react-form\\src\\reducers\\index.js",[],"D:\\Project\\ReactJS_Form\\react-form\\src\\actions\\index.js",["53"],"import axios from 'axios'\r\nimport {USER_LOGIN} from './types'\r\n\r\n/**\r\n * Action creator to be called when user attempts to log in\r\n */\r\nexport const userLogin = (credentials) =>\r\n    async dispatch => {\r\n       const res = await axios.post('/api/login', credentials)\r\n       dispatch({type: USER_LOGIN, payload: true})\r\n    }\r\n","D:\\Project\\ReactJS_Form\\react-form\\src\\actions\\types.js",[],"D:\\Project\\ReactJS_Form\\react-form\\src\\reducers\\userLoginReducer.js",["54"],"import {USER_LOGIN} from '../actions/types'\r\n\r\n/**\r\n * Reducer fired on successful log in response in userLogin action creator\r\n */\r\nexport default function(state=false, action) {\r\n    switch(action.type) {\r\n        case USER_LOGIN:\r\n            return action.payload\r\n        default:\r\n            return false\r\n    }\r\n}","D:\\Project\\ReactJS_Form\\react-form\\src\\helpers\\formFields.js",["55"],"/*\r\n    * Helper object to dynamically add fields to the form\r\n*/\r\nexport default [\r\n    {label: 'Email', name: 'email'},\r\n    {label: 'Password', name: 'password'}\r\n]","D:\\Project\\ReactJS_Form\\react-form\\src\\components\\FormField.js",["56"],"import React from 'react'\r\n\r\n/**\r\n * Helper method to dynamically render form field elements incorporating redux-form validation\r\n */\r\nexport default ({input, label, meta: {error, touched}}) => {\r\n    return (\r\n        <div className=\"form-field\">\r\n            <label>{label}</label>\r\n            <input {...input} type=\"text\"/>\r\n            <div className=\"form-validation\">\r\n                {touched && error}\r\n            </div>\r\n        </div>\r\n    )\r\n}",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":34,"column":21,"nodeType":"63","endLine":34,"endColumn":33},{"ruleId":"61","severity":1,"message":"62","line":35,"column":47,"nodeType":"63","endLine":35,"endColumn":59},{"ruleId":"61","severity":1,"message":"62","line":36,"column":21,"nodeType":"63","endLine":36,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":9,"column":14,"nodeType":"66","messageId":"67","endLine":9,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":6,"column":1,"nodeType":"70","endLine":13,"endColumn":2},{"ruleId":"68","severity":1,"message":"71","line":4,"column":1,"nodeType":"70","endLine":7,"endColumn":2},{"ruleId":"68","severity":1,"message":"72","line":6,"column":1,"nodeType":"70","endLine":16,"endColumn":2},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]